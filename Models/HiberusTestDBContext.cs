// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TestHiberusNet.Models
{
    public partial class HiberusTestDBContext : DbContext
    {
        public HiberusTestDBContext()
        {
        }

        public HiberusTestDBContext(DbContextOptions<HiberusTestDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Fabricantes> Fabricantes { get; set; }
        public virtual DbSet<Terminales> Terminales { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Estado>(entity =>
            {
                entity.HasKey(e => e.IdEstado);

                entity.ToTable("estado");

                entity.Property(e => e.IdEstado).HasColumnName("id_estado");

                entity.Property(e => e.EstadoDesc)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("estado_desc");

                entity.Property(e => e.EstadoName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("estado_name");
            });

            modelBuilder.Entity<Fabricantes>(entity =>
            {
                entity.HasKey(e => e.IdFab);

                entity.ToTable("fabricantes");

                entity.Property(e => e.IdFab).HasColumnName("id_fab");

                entity.Property(e => e.FabDesc)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("fab_desc");

                entity.Property(e => e.FabName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fab_name");
            });

            modelBuilder.Entity<Terminales>(entity =>
            {
                entity.HasKey(e => e.IdTerminal);

                entity.ToTable("terminales");

                entity.Property(e => e.IdTerminal).HasColumnName("id_terminal");

                entity.Property(e => e.FechaEstado)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_estado");

                entity.Property(e => e.FechaFabricacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_fabricacion");

                entity.Property(e => e.IdEstado).HasColumnName("id_estado");

                entity.Property(e => e.IdFab).HasColumnName("id_fab");

                entity.Property(e => e.TerminalDesc)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("terminal_desc");

                entity.Property(e => e.TerminalName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("terminal_name");

                entity.HasOne(d => d.IdEstadoNavigation)
                    .WithMany(p => p.Terminales)
                    .HasForeignKey(d => d.IdEstado)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_terminales_estado");

                entity.HasOne(d => d.IdFabNavigation)
                    .WithMany(p => p.Terminales)
                    .HasForeignKey(d => d.IdFab)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_terminales_fabricantes");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}